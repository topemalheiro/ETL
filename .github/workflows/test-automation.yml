name: Test Automation CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 6 AM UTC for regression testing
    - cron: '0 6 * * *'

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  api-tests:
    name: API Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build solution
      run: dotnet build --configuration Release --no-restore
      
    - name: Run API Tests
      run: |
        dotnet test API.AutomationTests/API.AutomationTests.csproj \
          --configuration Release \
          --logger "trx;LogFileName=api-test-results.trx" \
          --logger "console;verbosity=detailed" \
          --results-directory ./TestResults \
          --collect:"XPlat Code Coverage"
          
    - name: Upload API Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: api-test-results
        path: |
          ./TestResults/
          ./logs/
        retention-days: 30

  ui-tests-chrome:
    name: UI Tests (Chrome)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Setup Chrome
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: stable
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build solution
      run: dotnet build --configuration Release --no-restore
      
    - name: Run UI Tests (Chrome)
      env:
        BROWSER: Chrome
        CI: true
      run: |
        # Start virtual display
        export DISPLAY=:99
        Xvfb :99 -screen 0 1920x1080x24 &
        sleep 2
        
        dotnet test UI.AutomationTests/UI.AutomationTests.csproj \
          --configuration Release \
          --logger "trx;LogFileName=ui-chrome-test-results.trx" \
          --logger "console;verbosity=detailed" \
          --results-directory ./TestResults \
          --collect:"XPlat Code Coverage"
          
    - name: Upload Screenshots on Failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: ui-test-screenshots-chrome
        path: ./Screenshots/
        retention-days: 7
        
    - name: Upload UI Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ui-test-results-chrome
        path: |
          ./TestResults/
          ./logs/
        retention-days: 30

  ui-tests-firefox:
    name: UI Tests (Firefox)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Setup Firefox
      uses: browser-actions/setup-firefox@v1
      with:
        firefox-version: latest
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build solution
      run: dotnet build --configuration Release --no-restore
      
    - name: Run UI Tests (Firefox)
      env:
        BROWSER: Firefox
        CI: true
      run: |
        # Start virtual display
        export DISPLAY=:99
        Xvfb :99 -screen 0 1920x1080x24 &
        sleep 2
        
        dotnet test UI.AutomationTests/UI.AutomationTests.csproj \
          --configuration Release \
          --logger "trx;LogFileName=ui-firefox-test-results.trx" \
          --logger "console;verbosity=detailed" \
          --results-directory ./TestResults \
          --collect:"XPlat Code Coverage"
          
    - name: Upload Screenshots on Failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: ui-test-screenshots-firefox
        path: ./Screenshots/
        retention-days: 7
        
    - name: Upload UI Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ui-test-results-firefox
        path: |
          ./TestResults/
          ./logs/
        retention-days: 30

  docker-tests:
    name: Docker Container Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build Docker Image
      run: |
        docker build -t test-automation-framework:latest .
        
    - name: Run Tests in Container
      run: |
        docker run --rm \
          -v $(pwd)/TestResults:/app/TestResults \
          -v $(pwd)/logs:/app/logs \
          -v $(pwd)/Screenshots:/app/Screenshots \
          test-automation-framework:latest
          
    - name: Upload Container Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: docker-test-results
        path: |
          ./TestResults/
          ./logs/
          ./Screenshots/
        retention-days: 30

  test-report:
    name: Generate Test Report
    runs-on: ubuntu-latest
    needs: [api-tests, ui-tests-chrome, ui-tests-firefox, docker-tests]
    if: always()
    
    steps:
    - name: Download All Test Results
      uses: actions/download-artifact@v4
      with:
        path: ./all-test-results
        
    - name: Generate Test Summary
      run: |
        echo "# Test Automation Results" > test-summary.md
        echo "" >> test-summary.md
        echo "## Test Execution Summary" >> test-summary.md
        echo "- **Date**: $(date)" >> test-summary.md
        echo "- **Commit**: ${{ github.sha }}" >> test-summary.md
        echo "- **Branch**: ${{ github.ref_name }}" >> test-summary.md
        echo "" >> test-summary.md
        
        # Check each job status
        echo "## Job Status" >> test-summary.md
        echo "| Test Suite | Status |" >> test-summary.md
        echo "|------------|--------|" >> test-summary.md
        echo "| API Tests | ${{ needs.api-tests.result }} |" >> test-summary.md
        echo "| UI Tests (Chrome) | ${{ needs.ui-tests-chrome.result }} |" >> test-summary.md
        echo "| UI Tests (Firefox) | ${{ needs.ui-tests-firefox.result }} |" >> test-summary.md
        echo "| Docker Tests | ${{ needs.docker-tests.result }} |" >> test-summary.md
        
        echo "" >> test-summary.md
        echo "## Artifacts Generated" >> test-summary.md
        echo "- Test results in TRX format" >> test-summary.md
        echo "- Code coverage reports" >> test-summary.md
        echo "- Test logs with detailed execution information" >> test-summary.md
        echo "- Screenshots for failed UI tests" >> test-summary.md
        
        cat test-summary.md
        
    - name: Upload Test Summary
      uses: actions/upload-artifact@v4
      with:
        name: test-summary
        path: test-summary.md
        retention-days: 30

  performance-tests:
    name: Performance Baseline Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || contains(github.event.head_commit.message, '[perf]')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Run Performance Tests
      run: |
        echo "Running performance baseline tests..."
        # Filter for performance category tests
        dotnet test API.AutomationTests/API.AutomationTests.csproj \
          --configuration Release \
          --filter "Category=Performance" \
          --logger "console;verbosity=detailed"
          
        dotnet test UI.AutomationTests/UI.AutomationTests.csproj \
          --configuration Release \
          --filter "Category=Performance" \
          --logger "console;verbosity=detailed" 